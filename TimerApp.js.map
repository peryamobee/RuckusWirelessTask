{"version":3,"sources":["webpack:///webpack/bootstrap 76db5cf7f30ddca299f5","webpack:///./src/index.js","webpack:///./src/common/common.js","webpack:///./src/common/visual/timer.drv/timer.drv.js","webpack:///./src/common/factories/timer.fct.js","webpack:///./src/common/visual/tickTock.drv/tickTock.drv.js","webpack:///./src/common/factories/timeLogger.fct.js","webpack:///./src/common/services/context.srv/context.srv.js","webpack:///./src/common/inputs/toggle-button.drv/toggle-button.js","webpack:///./src/common/helpers/classToggle.drv.js","webpack:///./src/pages/simpleTimer/simpleTimer.js","webpack:///./src/pages/simpleTimer/simpleTimer.html","webpack:///./src/pages/dualTimer/dualTimer.js","webpack:///./src/pages/dualTimer/dualTimer.html","webpack:///./src/pages/chessTimer/chessTimer.js","webpack:///./src/pages/chessTimer/chessTimer.html"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCA,sEAAqE;;AAErE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;;AAEL;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA,EAAC;;AAED;AACA;AACA;AACA,MAAK;AACL,EAAC,E;;;;;;;;;;;;;;;ACtDD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEC;;;;;;;;;;;;;;;ACnDD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B,IAAI;AACjC,iCAAgC,IAAI;AACpC,iCAAgC,IAAI;AACpC,qCAAoC,IAAI;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,8BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAE8D;AAC9D,4BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA,UAAS;;;AAGT;AACA,MAAK;;;;;;;;;;;;;;;ACtKL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEK;;;;;;;;;;;;;;;;;;;;;ACXL;AACA;AACA;AACA;AACA,yCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;AACA;AACA,cAAa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK,E;;;;;;;AC9DL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAa;AACb;;;AAGA,UAAS;;AAET;AACA,MAAK;;;;;;;;;AClBL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEiB;;AAEjB;AACA;AACA,MAAK;;;;;;;;;;;;;;;;;ACvEL;AACA;AACA;AACA;AACA;AACA,uCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAa;AACb;AACA;AACA,EAAC;;;;;;;;AClBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;ACrBA,iC;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA,MAAK;AACL;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;ACrDA,Q;;;;;;;ACCA,sDAAuE;AACvE;AACA;;AAEA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;;AAET;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT,MAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;;AAEA;AACA;AACA;AACA,UAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,G;;;;;;;;;AC7FA,S","file":"TimerApp.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 76db5cf7f30ddca299f5\n **/","\r\nbaseController.$inject = [\"$scope\", \"$location\", \"Timer\", \"context\"];require('./index.scss');\r\n\r\n/*@ngInject*/\r\nfunction baseController($scope, $location, Timer, context){\r\n    var duration = $location.search().t;\r\n    $scope.context = context;\r\n\r\n    context.extend ({\r\n        duration : duration,\r\n        timer:  new Timer(duration),\r\n        autoStart: ('autostart' in $location.search()),\r\n        players1Name:'player1',\r\n        players2Name:'player2',\r\n        timerFormat:{\r\n            template:'hh:mm:ss',\r\n            trim:false\r\n        }\r\n    });\r\n\r\n    $scope.$watch('context.duration', function (nv) {\r\n        context.timer.setDuration(nv);\r\n        $location.search('t',nv)\r\n    });\r\n}\r\n\r\nmodule.exports = angular.module('app', [\r\n 'ui.router'\r\n ,'ui.router.stateHelper'\r\n  ,require('common/common.js').name\r\n])\r\n.config([\"stateHelperProvider\", \"$urlRouterProvider\", function (stateHelperProvider, $urlRouterProvider) {\r\n    var timerPage = require('./pages/simpleTimer/simpleTimer.js').stateConfig;\r\n    var dualPage = require('./pages/dualTimer/dualTimer.js').stateConfig;\r\n    var chessPage = require('./pages/chessTimer/chessTimer.js').stateConfig;\r\n    stateHelperProvider.state({\r\n        name: \"root\",\r\n        url: \"^\",\r\n        abstract: true,\r\n        //template: '<ui-view> loading ..</ui-view>',\r\n        controller: baseController,\r\n        children: [\r\n            timerPage,\r\n            dualPage,\r\n            chessPage\r\n        ]\r\n    }, \"IgnoreRoot\");\r\n    $urlRouterProvider.otherwise(timerPage.url);\r\n}]);\r\n\r\nangular.element(document).ready(function () {\r\n    angular.bootstrap(document, [module.exports.name], {\r\n        strictDi: true\r\n    });\r\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/index.js\n ** module id = 0\n ** module chunks = 0\n **/","/**\r\n * Created by pery on 06/02/2016.\r\n */\r\n\r\nrequire('./style/elegant-shadow.fx.scss');\r\nrequire('./style/shadow.fx.scss');\r\nrequire('./style/inside-fire.fx.scss');\r\nrequire('./style/guide-style.scss');\r\nrequire('./style/side-menu.scss');\r\nrequire('./style/control-pannel.scss');\r\nrequire('./style/log-table.scss');\r\nrequire('./style/top-bar.scss');\r\n\r\nmodule.exports = angular.module(__filename, [\r\n    require('./visual/timer.drv/timer.drv.js').name\r\n    ,require('./visual/tickTock.drv/tickTock.drv').name\r\n    ,require('./factories/timer.fct.js').name\r\n    ,require('./factories/timeLogger.fct.js').name\r\n    ,require('./services/context.srv/context.srv').name\r\n    ,require('./inputs/toggle-button.drv/toggle-button').name\r\n    ,require('./helpers/classToggle.drv').name\r\n]);\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/common/common.js\n ** module id = 5\n ** module chunks = 0\n **/","/**\r\n * Created by pery on 05/02/2016.\r\n */\r\nrequire('./timer.drv.scss');\r\n\r\nmodule.exports = angular.module(__filename,[\r\n    require('./../../factories/timer.fct.js').name\r\n])\r\n.directive('timer',function () {\r\n    return {\r\n        template:function(){\r\n            return require('./timer.drv.html');\r\n        }\r\n        //,controllerAs:'TimerCtrl'\r\n        ,scope:{\r\n            timer:'=timerModel',\r\n            withMiliSeconds:'=?'\r\n        }\r\n        ,link: function postLink(scope, element, attr) {\r\n\r\n            var $hours = element.find('.hours')\r\n                ,$minutes = element.find('.minutes')\r\n                ,$seconds = element.find('.seconds')\r\n                ,miliSeconds = element.find('.mili-seconds')\r\n                ;\r\n            scope.$watch('durationText',function(){\r\n                scope.timer.setDuration(scope.duration)\r\n            });\r\n\r\n            scope.toggleMiliSeconds = toggleMiliSeconds;\r\n\r\n            scope.timer.onUpdate(renderTimer);\r\n            function renderTimer(duration){\r\n                $hours.html( pad(duration.hours(),2) );\r\n                $minutes.html( pad(duration.minutes(),2) );\r\n                $seconds.html( pad(duration.seconds(),2) );\r\n                miliSeconds.html( pad(duration.milliseconds(),3) );\r\n            }\r\n\r\n            function pad(num,padding){\r\n                padding = '0'.repeat(padding);\r\n                return (padding + num).slice(-padding.length);\r\n            }\r\n\r\n            function toggleMiliSeconds(){\r\n                scope.withMiliSeconds != scope.withMiliSeconds;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n});\r\n\r\n\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/common/visual/timer.drv/timer.drv.js\n ** module id = 24\n ** module chunks = 0\n **/","var ga = window.ga;\r\nmodule.exports = angular.module(__filename,[])\r\n    .factory('Timer', [\"$rootScope\", \"$timeout\", function ($rootScope,$timeout) {\r\n        var _duration = Symbol('_duration');\r\n        var _on = Symbol('_on');\r\n        var _emit = Symbol('_emit');\r\n        var durationOption = {\r\n            trim: false,\r\n            template: 'hh:mm:ss'\r\n        };\r\n        /** [10h] [10m] [10s] [10ms] */\r\n        /** [10hour] [10min] [10sec] [10milisec] */\r\n        /** [10hour[s]] [10minute[s]] [10second[s]] [10[milisec[s]] */\r\n        var hours = \"(?:(\\\\d{1,2})\\\\s*(?:h|hour|hours)\\\\b)?\"  //\\b is word boundary\r\n            ,minutes = \"(?:(\\\\d{1,2})\\\\s*(?:m|min|minute|minutes)\\\\b)?\"\r\n            ,seconds = \"(?:(\\\\d{1,2})\\\\s*(?:s|sec|second|seconds)\\\\b)?\"\r\n            ,miliseconds = \"(?:(\\\\d{1,2})\\\\s*(?:ms|milisec|milisecs)\\\\b)?\"\r\n            ;\r\n        var format = [hours,minutes,seconds,miliseconds].join('\\\\s*')\r\n            ,timeExtractor = new RegExp(format);\r\n        function parseDuration(text){\r\n            var breakdown = (text || '').match( timeExtractor );\r\n            var describTime = null;\r\n            if(breakdown[0]){ //if !=''\r\n                describTime = {\r\n                    h: breakdown[1]*1 || 0,\r\n                    m: breakdown[2]*1 || 0,\r\n                    s: breakdown[3]*1 || 0,\r\n                    ms: breakdown[4]*1 || 0\r\n                };\r\n\r\n            }\r\n\r\n            return breakdown[0]?describTime:text;\r\n        }\r\n\r\n\r\n        function Timer(durationText){\r\n            var me = this;\r\n            this[_on]= {};\r\n            this[_emit]= {};\r\n            this.state = {\r\n                 pause : true,\r\n                 setted : false,\r\n                 timeEnd : false, /*mean time reached the end*/\r\n                 start  : false,\r\n                 stop: true\r\n            };\r\n            var previousCycle = new Date();\r\n\r\n            /** generate events code **/\r\n            var events = 'start,pause,reset,setduration,update,timeEnd'.split(',');\r\n            events.forEach(function (eventName) {\r\n                var queue = me[_on][eventName] = [];\r\n                /*listeners*/\r\n                me['on'+_.capitalize(eventName)] =  queue.push.bind(queue);\r\n                /*emits*/\r\n                me[_emit][eventName] = function () {\r\n                    _.over(queue).apply(me,arguments);\r\n                };\r\n            });\r\n\r\n            this.setDuration( durationText );\r\n            cycle(updateTimer);\r\n            /*cycle*/\r\n            function cycle(callback){\r\n                var time = Date.now();\r\n                callback(time, previousCycle);\r\n                previousCycle = time;\r\n                requestAnimationFrame(cycle.bind(this,callback));\r\n            }\r\n\r\n            function updateTimer(time,prevTime){\r\n                if(me.state.pause) return ;\r\n                if(me.state.stop) return ;\r\n\r\n                var timePass = time - prevTime;\r\n                var duration = me[_duration];\r\n                duration.subtract(timePass,'milliseconds');\r\n                //console.log(timePass, duration.asMilliseconds());\r\n\r\n\r\n                if( duration.asMilliseconds() <= 0 ){\r\n                    duration.add( -duration.asMilliseconds() );\r\n                    me.pause();\r\n                    me.state.timeEnd = true;\r\n                    me.state.stop = true;\r\n                    me[_emit].timeEnd(duration);\r\n                    /* google analytic */\r\n                    ga && ga( 'Timer.send', 'event', 'Timer', 'time end', 'duration', this.durationText );\r\n                }\r\n                me[_emit].update(duration);\r\n\r\n                //!$rootScope.$$phase && $rootScope.$digest(); //bad way\r\n                $timeout();//good way\r\n            }\r\n        }\r\n        var events = 'reset'.split(',');\r\n        _.extend(Timer.prototype,{\r\n            setDuration: function setDuration( durationText ) {\r\n                var durationDescription = parseDuration(durationText);\r\n                durationDescription = durationDescription || this.durationDescription;\r\n                this[_duration] =  moment.duration( durationDescription );\r\n                this.durationDescription = durationDescription;\r\n                /*state*/\r\n                this.state.timeEnd = false;\r\n                this.state.setted = (this[_duration].asMilliseconds() > 0);\r\n                /*event*/\r\n                this[_emit].setduration( this[_duration] );\r\n                this[_emit].update( this[_duration] )\r\n            },\r\n            getDuration:function getDuration(){\r\n                return this[_duration];\r\n            },\r\n            start: function start(){\r\n                if(!this.state.timeEnd){\r\n                    /*state*/\r\n                    this.state.start = true;\r\n                    this.state.pause = false;\r\n                    this.state.stop = false;\r\n                    this.state.timeEnd = false;\r\n                    /*event*/\r\n                    this[_emit].start( this[_duration] );\r\n                    /* google analytic */\r\n                    ga && ga('Timer.send', 'event', 'Timer', 'start', 'time', this[_duration].format(durationOption) );\r\n                }\r\n            },\r\n            pause: function pause () {\r\n                //ga('create', 'UA-XXXXX-Y', 'auto', 'stop timter');\r\n                //_trackEvent('timer', 'start', time)\r\n                /*state*/\r\n                this.state.start = false;\r\n                this.state.pause = true;\r\n                this.state.stop = false;\r\n                this.state.timeEnd = false;\r\n                /*event*/\r\n                this[_emit].pause( this[_duration] );\r\n\r\n                /* google analytic */\r\n                ga && ga('Timer.send', 'event', 'Timer', 'pause', 'time', this[_duration].format(durationOption) );\r\n\r\n            },\r\n            reset: function reset(){\r\n                this.setDuration();\r\n                /*state*/\r\n                this.state.start = false;\r\n                this.state.pause = false;\r\n                this.state.stop = true;\r\n                this.state.timeEnd = false;\r\n\r\n                this[_emit].reset( this[_duration] );\r\n                /* google analytic */\r\n                ga && ga('Timer.send', 'event', 'Timer', 'reset', 'time', this[_duration].format(durationOption) );\r\n            },\r\n            restart: function restart () {\r\n                //ga('create', 'UA-XXXXX-Y', 'auto', 'start timer');\r\n                this.reset();\r\n                this.start();\r\n            },\r\n            stop: function(){\r\n                this.reset();\r\n            }\r\n        });\r\n\r\n\r\n        return Timer;\r\n    }]);\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/common/factories/timer.fct.js\n ** module id = 27\n ** module chunks = 0\n **/","/**\r\n * Created by pery on 05/02/2016.\r\n */\r\nrequire('./tickTock.drv.scss');\r\n\r\nmodule.exports = angular.module(__filename,[])\r\n    .directive('tickTock',[function () {\r\n        return {\r\n            template: require('./tickTock.drv.html')\r\n        }\r\n\r\n    }]);\r\n\r\n\r\n\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/common/visual/tickTock.drv/tickTock.drv.js\n ** module id = 29\n ** module chunks = 0\n **/","/**\r\n * Created by pery on 08/02/2016.\r\n */\r\nmodule.exports = angular.module(__filename,[])\r\n    .factory('TimeLogger', function () { //todo:change it to loggerTime\r\n        return function ( timer ) {\r\n            /*collection*/\r\n            var logs = new Set();\r\n            var Duration = moment.duration.bind(moment);\r\n            var summary =  moment.duration();\r\n            var summaryText = '';\r\n\r\n            var durationOption = {\r\n                trim: false,\r\n                template: 'hh:mm:ss'\r\n            };\r\n\r\n            /** API **/\r\n            _.extend(logs, {\r\n                list: list,\r\n                createLog: createLog\r\n            });\r\n            Object.defineProperty(logs, 'summary', {\r\n                get: function () {\r\n                    return  summaryText;\r\n                }\r\n            });\r\n\r\n            /** end API **/\r\n            function list() {\r\n                return Array.from(logs);\r\n            }\r\n\r\n            function createLog(player) {\r\n                var startTime = Duration(timer.getDuration());\r\n\r\n                var log = {\r\n                    name: player,\r\n                    startTime: startTime.format(durationOption),\r\n                    endTime: '',\r\n                    duration: ''\r\n                };\r\n                logs.add(log);\r\n                return function closeLog( final ) {\r\n                    var endTime = timer.getDuration();\r\n                    var duration = Duration(startTime).subtract(endTime);\r\n                    log.endTime = endTime.format(durationOption);\r\n                    var template =  (duration.asSeconds() > 0)?\r\n                        'h[hrs] mm[min] ss[s]':\r\n                        'h[hrs] mm[min] ss[s] SSS[ms]';\r\n                    log.duration = duration.format( template ) ;\r\n\r\n\r\n                    summaryText = Duration(summary).add( duration ).format(durationOption);\r\n                    final && summary.add( duration );\r\n\r\n                    return log;\r\n                }\r\n            }\r\n\r\n            return logs;\r\n        }\r\n    });\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/common/factories/timeLogger.fct.js\n ** module id = 33\n ** module chunks = 0\n **/","/**\r\n * Created by pery on 08/02/2016.\r\n */\r\nmodule.exports = angular.module(__filename,[])\r\n    .service('context', function () {\r\n        var context = {};\r\n\r\n        Object.defineProperty(context,'extend',{\r\n            value: function( newValues ){\r\n                _.extend( context, newValues );\r\n                return context;\r\n            },\r\n            addTimer: function (timer) {\r\n\r\n            } \r\n        });\r\n\r\n        return context;\r\n    });\r\n\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/common/services/context.srv/context.srv.js\n ** module id = 34\n ** module chunks = 0\n **/","/**\r\n * Created by Pery on 17/02/2016.\r\n */\r\nrequire('./toggle-button.scss');\r\n\r\nmodule.exports = angular.module(__filename, [])\r\n    .directive('toggleButton', function () {\r\n        return {\r\n            restrict: \"E\",\r\n            require: 'ngModel',\r\n            template: require('./toggle-button.html'),\r\n            link: function ( scope, element, attr, ctrl ) {\r\n                var PARTIAL = 2;\r\n                var trueValue = attr.ngTrueValue || 'true';\r\n                var falseValue = attr.ngFalseValue || 'false';\r\n                var partialValue = attr.partialValue || '\"partial\"';\r\n\r\n                element.click(function (event) {\r\n                    if(attr.disabled) return ;\r\n                    toggleChecked();\r\n                });\r\n\r\n                function render(value){\r\n                    element.removeAttr('checked');\r\n                    element.removeAttr('indeterminate');\r\n                    if ( value ) {\r\n                        element.attr('checked', 'checked');\r\n                        (value == PARTIAL)\r\n                            && element.attr('indeterminate', 'indeterminate');\r\n                    }\r\n                }\r\n\r\n                ctrl.render = function() {\r\n                    render( ctrl.$viewValue );\r\n                };\r\n\r\n                var initViewValue = attr.checked ? attr.indeterminate? PARTIAL : true : false;\r\n                //todo: something not work here when modelValue init before directive build\r\n                //ctrl.$setViewValue( ctrl.$viewValue || initViewValue );\r\n                ctrl.render( ctrl.$viewValue );\r\n\r\n                function toggleChecked() {\r\n                    ctrl.$setViewValue(!ctrl.$modelValue);\r\n                    ctrl.render();\r\n                }\r\n\r\n                ctrl.$formatters.push(function (value) {\r\n                    switch (value){\r\n                        case scope.$parent.$eval(trueValue):\r\n                            value = true;\r\n                            break;\r\n                        case scope.$parent.$eval(falseValue):\r\n                            value = false;\r\n                            break;\r\n                        case scope.$parent.$eval(partialValue):\r\n                            value = PARTIAL;\r\n                            break;\r\n                    }\r\n                    render( value );\r\n                    return value\r\n                });\r\n                ctrl.$parsers.unshift(function (value) {\r\n                    value = value ? (value == PARTIAL) ? partialValue : trueValue : falseValue;\r\n                    value = scope.$parent.$eval(value);\r\n                    ctrl.render(value);\r\n                    return value;\r\n\r\n                });\r\n\r\n            }\r\n        }\r\n    });\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/common/inputs/toggle-button.drv/toggle-button.js\n ** module id = 35\n ** module chunks = 0\n **/","/**\r\n * Created by Pery on 17/02/2016.\r\n */\r\nmodule.exports = angular.module(__filename,[])\r\n.directive('classToggle',[\"Timer\", function (Timer) {\r\n    var separator = /(.+)?\\.([^.]+)$/; // (selector).(toggledClass)\r\n    return {\r\n        restrict:'A',\r\n        link: function postLink(scope, element, attr) {\r\n            var res = attr.classToggle.match(separator);\r\n            var className = res? res[2] : classToggle;\r\n            var targetElement = res? angular.element(res[1]) : element;\r\n\r\n            element.on('click', function () {\r\n                targetElement[0].classList.toggle(className)\r\n            })\r\n        }\r\n    };\r\n}]);\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/common/helpers/classToggle.drv.js\n ** module id = 39\n ** module chunks = 0\n **/","/**\r\n * Created by pery on 31/01/2016.\r\n */\r\ntimerController.$inject = [\"$scope\", \"$location\", \"$timeout\", \"Timer\", \"context\"];\r\nrequire('./simpleTimer.scss');\r\n/*@ngInject*/\r\nfunction timerController($scope, $location, $timeout, Timer, context){\r\n   var timer = $scope.timer = new Timer(context.duration);\r\n    context.autoStart && timer.start();\r\n   $scope.$watch('context.duration', timer.setDuration.bind(timer));\r\n\r\n    /* google analytic */\r\n    ga('Timer.send', 'pageview', 'simple Page');\r\n}\r\n\r\nmodule.exports.stateConfig = {\r\n    name:\"timer\",\r\n    url:\"/timer\",\r\n    abstract:false,\r\n    template: require(\"./simpleTimer.html\"),\r\n    controller: timerController\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/simpleTimer/simpleTimer.js\n ** module id = 40\n ** module chunks = 0\n **/","module.exports = \"<side-menu>\\r\\n    <h3>customize</h3>\\r\\n    <br>\\r\\n    <span>milli sec :</span><toggle-button ng-model=\\\"context.milisec\\\"></toggle-button>\\r\\n    <br>\\r\\n    <span>auto start:</span><toggle-button ng-model=\\\"context.autoStart\\\"></toggle-button>\\r\\n</side-menu>\\r\\n\\r\\n\\r\\n<div class=\\\"simple-timer\\\">\\r\\n    <tick-tock ng-class=\\\"{\\r\\n    start:timer.state.start,\\r\\n    pause:timer.state.pause,\\r\\n}\\\"></tick-tock>\\r\\n    <timer timer-model=\\\"timer\\\"\\r\\n           with-mili-seconds=\\\"context.milisec\\\"\\r\\n    >timer inside</timer>\\r\\n\\r\\n    <br>\\r\\n    <control-pannel >\\r\\n        <button class=\\\"start-button\\\"\\r\\n                ng-click=\\\"timer.start()\\\">\\r\\n            <i class=\\\"fa fa-play fa-fw\\\"></i>\\r\\n            Start\\r\\n        </button>\\r\\n\\r\\n        <button class=\\\"reset-button\\\"\\r\\n                ng-click=\\\"timer.pause()\\\">\\r\\n            <i class=\\\"fa fa-pause fa-fw\\\"></i>\\r\\n            Pause\\r\\n        </button>\\r\\n\\r\\n        <button class=\\\"pause-button\\\"\\r\\n                ng-click=\\\"timer.reset()\\\">\\r\\n            <i class=\\\"fa fa-stop fa-fw\\\"></i>\\r\\n\\r\\n            Reset\\r\\n        </button>\\r\\n    </control-pannel>\\r\\n</div>\\r\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/simpleTimer/simpleTimer.html\n ** module id = 43\n ** module chunks = 0\n **/","/**\r\n * Created by pery on 31/01/2016.\r\n */\r\ntimerController.$inject = [\"$scope\", \"TimeLogger\", \"Timer\", \"context\"];\r\nrequire('./dualTimer.scss');\r\n/*@ngInject*/\r\nfunction timerController($scope, TimeLogger, Timer, context){\r\n    /* init page */\r\n    var  timer = $scope.timer = new Timer(context.duration);\r\n\r\n    $scope.$watch('context.duration', timer.setDuration.bind(timer));\r\n\r\n    /* players */\r\n    var index = -1,\r\n        players = [context.players1Name, context.players2Name]\r\n    ;\r\n\r\n    function nextPlayer(val){\r\n        val =(++index) % players.length ;\r\n        return  players[ val ];\r\n    }\r\n\r\n    $scope.switchPlayer = switchPlayer;\r\n    var timeLogger = $scope.timeLogger = TimeLogger( timer );\r\n\r\n    var closeLog = angular.noop;\r\n    function switchPlayer(){\r\n        if( timer.state.setted ){\r\n            timer.start();\r\n            closeLog(true);\r\n            closeLog = timeLogger.createLog( nextPlayer());\r\n        }\r\n    }\r\n\r\n    timer.onReset(function () {\r\n       timeLogger.clear();\r\n    });\r\n    timer.onUpdate(function () {\r\n        closeLog();\r\n    });\r\n    context.autoStart && timer.start();\r\n\r\n\r\n    /* google analytic */\r\n    ga('Timer.send', 'pageview', 'Dual Page');\r\n}\r\n\r\nmodule.exports.stateConfig = {\r\n    name:\"dual\",\r\n    url:\"/dual\",\r\n    abstract:false,\r\n    template: require(\"./dualTimer.html\"),\r\n    controller: timerController\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/dualTimer/dualTimer.js\n ** module id = 44\n ** module chunks = 0\n **/","module.exports = \"<side-menu>\\r\\n    <h3>customize</h3>\\r\\n    <br>\\r\\n    <span>milli sec :</span><toggle-button ng-model=\\\"context.milisec\\\"></toggle-button>\\r\\n    <br>\\r\\n    <span>burn fx :</span><toggle-button ng-model=\\\"context.burnFx\\\"></toggle-button>\\r\\n    <br>\\r\\n    <span>auto start :</span><toggle-button ng-model=\\\"context.autoStart\\\"></toggle-button>\\r\\n    <br>\\r\\n    <button class=\\\"pause-button\\\"\\r\\n            ng-click=\\\"timer.pause()\\\">\\r\\n        <i class=\\\"fa fa-pause fa-fw\\\"></i>\\r\\n        Pause\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"reset-button\\\"\\r\\n            ng-click=\\\"timer.reset();timeLogger.clear();\\\">\\r\\n        <i class=\\\"fa fa-stop fa-fw\\\"></i>\\r\\n        Reset\\r\\n    </button>\\r\\n\\r\\n</side-menu>\\r\\n\\r\\n\\r\\n<div class=\\\"dual-timer\\\">\\r\\n\\r\\n    <control-pannel >\\r\\n        <button class=\\\"reset-button\\\"\\r\\n                ng-click=\\\"timer.pause()\\\">\\r\\n            <i class=\\\"fa fa-pause fa-fw\\\"></i>\\r\\n            Pause\\r\\n        </button>\\r\\n\\r\\n        <button class=\\\"big-main-button\\\"\\r\\n                ng-class=\\\"{'burn-fx':context.burnFx && timer.state.start}\\\"\\r\\n                ng-click=\\\"switchPlayer()\\\">\\r\\n\\r\\n            <timer timer-model=\\\"timer\\\"\\r\\n                   with-mili-seconds=\\\"context.milisec\\\"\\r\\n                   ng-class=\\\"{finish:timer.state.timeEnd}\\\">timer inside</timer>\\r\\n            <span ng-show=\\\"timer.state.start\\\">switch</span>\\r\\n            <span ng-hide=\\\"timer.state.start\\\">start</span>\\r\\n        </button>\\r\\n\\r\\n        <button class=\\\"pause-button\\\"\\r\\n                ng-click=\\\"timer.reset()\\\">\\r\\n            <i class=\\\"fa fa-stop fa-fw\\\"></i>\\r\\n            Reset\\r\\n        </button>\\r\\n    </control-pannel>\\r\\n\\r\\n    <tick-tock ng-class=\\\"{\\r\\n        start:timer.state.start,\\r\\n        pause:timer.state.pause,\\r\\n    }\\\"></tick-tock>\\r\\n\\r\\n    <div class=\\\"log-table\\\">\\r\\n        <h3 class=\\\"header\\\">\\r\\n           <div class=\\\"player-name\\\">name</div>\\r\\n           <div class=\\\"start-time\\\">start</div> -\\r\\n           <div class=\\\"end-time\\\">end</div> =\\r\\n           <div class=\\\"duration-time\\\">duration</div>\\r\\n        </h3>\\r\\n        <div class=\\\"log\\\" ng-repeat=\\\"log in  timeLogger.list().reverse()\\\">\\r\\n            <div class=\\\"player-name\\\"\\r\\n                 ng-bind=\\\"log.name\\\">player start time</div>\\r\\n\\r\\n            <div class=\\\"start-time\\\"\\r\\n                 ng-bind=\\\"log.startTime\\\">player start time</div> -\\r\\n\\r\\n            <div class=\\\"end-time\\\"\\r\\n                 ng-bind=\\\"log.endTime\\\">player end time</div> =\\r\\n\\r\\n            <div class=\\\"duration-time\\\"\\r\\n                 ng-bind=\\\"log.duration\\\">player duration</div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/dualTimer/dualTimer.html\n ** module id = 47\n ** module chunks = 0\n **/","\r\ntimerController.$inject = [\"$scope\", \"TimeLogger\", \"Timer\", \"context\"];require('./chessTimer.scss');\r\n/*@ngInject*/\r\nfunction timerController($scope, TimeLogger, Timer, context){\r\n\r\n   var index = -1,\r\n        timers = [new Timer(context.duration),new Timer(context.duration)];\r\n\r\n\r\n\r\n\r\n    var players = $scope.players =  [{\r\n            name:context.players1Name,\r\n            timer: timers[0],\r\n            timeLogger: new TimeLogger( timers[0] ),\r\n            get active(){\r\n                return this.timer.state.start;\r\n            }\r\n        },{\r\n            name:context.players2Name,\r\n            timer: timers[1],\r\n            timeLogger: new TimeLogger( timers[1] ),\r\n            get active(){\r\n                return this.timer.state.start;\r\n            }\r\n        }];\r\n\r\n    $scope.$watch('context.duration', function(newDuration) {\r\n        timers.forEach(function (timer) {\r\n            timer.setDuration(newDuration)\r\n        });\r\n    });\r\n\r\n    $scope.switchPlayer = switchPlayer;\r\n    $scope.resetTimers = resetTimers;\r\n    $scope.pauseTimers = pauseTimers;\r\n\r\n    var closeLog = angular.noop;\r\n    var player = nextPlayer();\r\n    timers.forEach(function (timer) {\r\n        timer.onUpdate(function () {\r\n          closeLog();\r\n        })\r\n    });\r\n\r\n    function nextPlayer(){\r\n        return  players[ (++index) % players.length ];\r\n    }\r\n\r\n    function switchPlayer(){\r\n        close( player );\r\n        player = nextPlayer();\r\n        start( player );\r\n    }\r\n\r\n    function start(player){\r\n        if( player.timer.state.setted ) {\r\n            player.timer.start();\r\n            //player.active = true;\r\n            closeLog = player.timeLogger.createLog(player.name);\r\n        }\r\n    }\r\n\r\n    function close(player){\r\n        player.timer.pause();\r\n        closeLog(true);\r\n        player.active = false;\r\n    }\r\n\r\n    function resetTimers(){\r\n        players.forEach(function (p) {\r\n            p.timer.reset();\r\n            p.timeLogger.clear();\r\n        })\r\n    }\r\n\r\n    function pauseTimers(){\r\n        players.forEach(function (p) {\r\n            p.timer.pause();\r\n        })\r\n    }\r\n    context.autoStart && start(player);\r\n\r\n    /* google analytic */\r\n    ga('Timer.send', 'pageview', 'Chess Page');\r\n}\r\n\r\nmodule.exports.stateConfig = {\r\n    name:\"chess\",\r\n    url:\"/chess\",\r\n    abstract:false,\r\n    template: require(\"./chessTimer.html\"),\r\n    controller: timerController\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/chessTimer/chessTimer.js\n ** module id = 48\n ** module chunks = 0\n **/","module.exports = \"<side-menu>\\r\\n    <h3>customize</h3>\\r\\n    <br>\\r\\n    <span>milli sec :</span><toggle-button ng-model=\\\"context.milisec\\\"></toggle-button>\\r\\n    <br>\\r\\n    <span>auto start:</span><toggle-button ng-model=\\\"context.autoStart\\\"></toggle-button>\\r\\n\\r\\n    <br>\\r\\n    <button class=\\\"pause-button\\\"\\r\\n            ng-click=\\\"pauseTimers()\\\">\\r\\n        <i class=\\\"fa fa-pause fa-fw\\\"></i>\\r\\n        Pause\\r\\n    </button>\\r\\n\\r\\n    <button class=\\\"reset-button\\\"\\r\\n            ng-click=\\\"resetTimers()\\\">\\r\\n        <i class=\\\"fa fa-stop fa-fw\\\"></i>\\r\\n        Reset\\r\\n    </button>\\r\\n\\r\\n</side-menu>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"chess-timer\\\">\\r\\n    <button class=\\\"swings-button\\\"\\r\\n            ng-class=\\\"{\\r\\n                'burn-fx':context.burnFx,\\r\\n                'toggle-left':players[0].timer.state.start,\\r\\n                'toggle-right':players[1].timer.state.start\\r\\n            }\\\"\\r\\n            ng-click=\\\"switchPlayer()\\\">\\r\\n\\r\\n        <span >switch</span>\\r\\n    </button>\\r\\n    <br>\\r\\n\\r\\n    <tick-tock class=\\\"player-1\\\"  ng-class=\\\"{\\r\\n        start: players[0].timer.state.start,\\r\\n        pause: players[0].timer.state.pause,\\r\\n    }\\\"></tick-tock>\\r\\n\\r\\n    <tick-tock class=\\\"player-2\\\" ng-class=\\\"{\\r\\n        start: players[1].timer.state.start,\\r\\n        pause: players[1].timer.state.pause,\\r\\n    }\\\"></tick-tock>\\r\\n\\r\\n    <div class=\\\"log-table side-by-side\\\"\\r\\n         ng-repeat=\\\"player in players\\\"\\r\\n         ng-class=\\\"{\\r\\n            active:player.active,\\r\\n            'not-active': !player.active && (players[0].active || players[1].active)\\r\\n        }\\\">\\r\\n\\r\\n        <div class=\\\"player-name\\\" ng-bind=\\\"player.name\\\">name</div>\\r\\n        <span>Time Left</span>\\r\\n        <timer timer-model=\\\"player.timer\\\"\\r\\n               with-mili-seconds=\\\"context.milisec\\\">timer inside</timer>\\r\\n\\r\\n        <h3 class=\\\"header\\\">\\r\\n            <div class=\\\"start-time\\\">start</div> -\\r\\n            <div class=\\\"end-time\\\">end</div> =\\r\\n            <div class=\\\"duration-time\\\">duration</div>\\r\\n        </h3>\\r\\n        <div class=\\\"log\\\" ng-repeat=\\\"log in  player.timeLogger.list().reverse()\\\">\\r\\n            <div class=\\\"start-time\\\"\\r\\n                 ng-bind=\\\"log.startTime\\\">player start time</div> -\\r\\n\\r\\n            <div class=\\\"end-time\\\"\\r\\n                 ng-bind=\\\"log.endTime\\\">player end time</div> =\\r\\n\\r\\n            <div class=\\\"duration-time\\\"\\r\\n                 ng-bind=\\\"log.duration\\\">player duration</div>\\r\\n        </div>\\r\\n        <div class=\\\"summary\\\">\\r\\n            <div class=\\\"duration-time\\\" ng-bind=\\\"player.timeLogger.summary\\\">10:20:20</div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n</div>\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/pages/chessTimer/chessTimer.html\n ** module id = 51\n ** module chunks = 0\n **/"],"sourceRoot":""}